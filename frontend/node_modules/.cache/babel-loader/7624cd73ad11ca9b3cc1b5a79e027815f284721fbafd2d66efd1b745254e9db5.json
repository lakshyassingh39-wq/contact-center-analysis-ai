{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000 // 30 seconds for file uploads\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  demoLogin: () => api.post('/auth/demo-login')\n};\n\n// Calls API\nexport const callsAPI = {\n  upload: formData => api.post('/calls/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  list: (params = {}) => api.get('/calls', {\n    params\n  }),\n  get: id => api.get(`/calls/${id}`),\n  delete: id => api.delete(`/calls/${id}`)\n};\n\n// Analysis API\nexport const analysisAPI = {\n  transcribe: callId => api.post(`/analysis/transcribe/${callId}`),\n  analyze: callId => api.post(`/analysis/analyze/${callId}`),\n  get: callId => api.get(`/analysis/${callId}`),\n  list: (params = {}) => api.get('/analysis', {\n    params\n  })\n};\n\n// Coaching API\nexport const coachingAPI = {\n  generate: callId => api.post(`/coaching/generate/${callId}`),\n  get: callId => api.get(`/coaching/${callId}`),\n  list: (params = {}) => api.get('/coaching', {\n    params\n  }),\n  updateProgress: (callId, progressData) => api.post(`/coaching/${callId}/progress`, progressData),\n  submitQuiz: (callId, answers) => api.post(`/coaching/${callId}/quiz`, {\n    answers\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","demoLogin","callsAPI","upload","formData","list","params","get","id","delete","analysisAPI","transcribe","callId","analyze","coachingAPI","generate","updateProgress","progressData","submitQuiz","answers"],"sources":["/Users/pw/Documents/project/python/omind-ai-contact-center/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000, // 30 seconds for file uploads\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  demoLogin: () => api.post('/auth/demo-login'),\n};\n\n// Calls API\nexport const callsAPI = {\n  upload: (formData) => api.post('/calls/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  }),\n  list: (params = {}) => api.get('/calls', { params }),\n  get: (id) => api.get(`/calls/${id}`),\n  delete: (id) => api.delete(`/calls/${id}`),\n};\n\n// Analysis API\nexport const analysisAPI = {\n  transcribe: (callId) => api.post(`/analysis/transcribe/${callId}`),\n  analyze: (callId) => api.post(`/analysis/analyze/${callId}`),\n  get: (callId) => api.get(`/analysis/${callId}`),\n  list: (params = {}) => api.get('/analysis', { params }),\n};\n\n// Coaching API\nexport const coachingAPI = {\n  generate: (callId) => api.post(`/coaching/generate/${callId}`),\n  get: (callId) => api.get(`/coaching/${callId}`),\n  list: (params = {}) => api.get('/coaching', { params }),\n  updateProgress: (callId, progressData) => \n    api.post(`/coaching/${callId}/progress`, progressData),\n  submitQuiz: (callId, answers) => \n    api.post(`/coaching/${callId}/quiz`, { answers }),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}