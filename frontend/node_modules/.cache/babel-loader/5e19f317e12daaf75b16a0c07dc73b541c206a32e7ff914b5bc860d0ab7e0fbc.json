{"ast":null,"code":"var _jsxFileName = \"/Users/pw/Documents/project/python/omind-ai-contact-center/frontend/src/context/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      // Initialize socket connection\n      const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:5000', {\n        auth: {\n          token: localStorage.getItem('token')\n        }\n      });\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n        newSocket.emit('join-user-room', user.id);\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n      });\n\n      // Listen for call processing events\n      newSocket.on('call-uploaded', data => {\n        toast.success(`File uploaded: ${data.fileName}`);\n      });\n      newSocket.on('transcription-started', data => {\n        toast.loading('Transcription started...', {\n          id: `transcription-${data.callId}`\n        });\n      });\n      newSocket.on('transcription-completed', data => {\n        toast.success('Transcription completed!', {\n          id: `transcription-${data.callId}`\n        });\n      });\n      newSocket.on('transcription-failed', data => {\n        toast.error(`Transcription failed: ${data.error}`, {\n          id: `transcription-${data.callId}`\n        });\n      });\n      newSocket.on('analysis-started', data => {\n        toast.loading('Analysis started...', {\n          id: `analysis-${data.callId}`\n        });\n      });\n      newSocket.on('analysis-completed', data => {\n        toast.success('Analysis completed!', {\n          id: `analysis-${data.callId}`\n        });\n      });\n      newSocket.on('analysis-failed', data => {\n        toast.error(`Analysis failed: ${data.error}`, {\n          id: `analysis-${data.callId}`\n        });\n      });\n      newSocket.on('coaching-generation-started', data => {\n        toast.loading('Generating coaching plan...', {\n          id: `coaching-${data.callId}`\n        });\n      });\n      newSocket.on('coaching-generated', data => {\n        toast.success('Coaching plan ready!', {\n          id: `coaching-${data.callId}`\n        });\n      });\n      newSocket.on('coaching-generation-failed', data => {\n        toast.error(`Coaching generation failed: ${data.error}`, {\n          id: `coaching-${data.callId}`\n        });\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.disconnect();\n      };\n    } else {\n      // Clean up socket when user logs out\n      if (socket) {\n        socket.disconnect();\n        setSocket(null);\n        setConnected(false);\n      }\n    }\n  }, [isAuthenticated, user]);\n  const joinCallRoom = callId => {\n    if (socket && connected) {\n      socket.emit('join-call-room', callId);\n    }\n  };\n  const leaveCallRoom = callId => {\n    if (socket && connected) {\n      socket.emit('leave-call-room', callId);\n    }\n  };\n  const value = {\n    socket,\n    connected,\n    joinCallRoom,\n    leaveCallRoom\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"df7gmWRUi5BURMWKcxIwwBEDVH4=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","toast","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","connected","setConnected","user","isAuthenticated","newSocket","process","env","REACT_APP_API_URL","auth","token","localStorage","getItem","on","console","log","emit","id","data","success","fileName","loading","callId","error","disconnect","joinCallRoom","leaveCallRoom","value","Provider","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pw/Documents/project/python/omind-ai-contact-center/frontend/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport toast from 'react-hot-toast';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const { user, isAuthenticated } = useAuth();\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      // Initialize socket connection\n      const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:5000', {\n        auth: {\n          token: localStorage.getItem('token')\n        }\n      });\n\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n        newSocket.emit('join-user-room', user.id);\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n      });\n\n      // Listen for call processing events\n      newSocket.on('call-uploaded', (data) => {\n        toast.success(`File uploaded: ${data.fileName}`);\n      });\n\n      newSocket.on('transcription-started', (data) => {\n        toast.loading('Transcription started...', { id: `transcription-${data.callId}` });\n      });\n\n      newSocket.on('transcription-completed', (data) => {\n        toast.success('Transcription completed!', { id: `transcription-${data.callId}` });\n      });\n\n      newSocket.on('transcription-failed', (data) => {\n        toast.error(`Transcription failed: ${data.error}`, { id: `transcription-${data.callId}` });\n      });\n\n      newSocket.on('analysis-started', (data) => {\n        toast.loading('Analysis started...', { id: `analysis-${data.callId}` });\n      });\n\n      newSocket.on('analysis-completed', (data) => {\n        toast.success('Analysis completed!', { id: `analysis-${data.callId}` });\n      });\n\n      newSocket.on('analysis-failed', (data) => {\n        toast.error(`Analysis failed: ${data.error}`, { id: `analysis-${data.callId}` });\n      });\n\n      newSocket.on('coaching-generation-started', (data) => {\n        toast.loading('Generating coaching plan...', { id: `coaching-${data.callId}` });\n      });\n\n      newSocket.on('coaching-generated', (data) => {\n        toast.success('Coaching plan ready!', { id: `coaching-${data.callId}` });\n      });\n\n      newSocket.on('coaching-generation-failed', (data) => {\n        toast.error(`Coaching generation failed: ${data.error}`, { id: `coaching-${data.callId}` });\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.disconnect();\n      };\n    } else {\n      // Clean up socket when user logs out\n      if (socket) {\n        socket.disconnect();\n        setSocket(null);\n        setConnected(false);\n      }\n    }\n  }, [isAuthenticated, user]);\n\n  const joinCallRoom = (callId) => {\n    if (socket && connected) {\n      socket.emit('join-call-room', callId);\n    }\n  };\n\n  const leaveCallRoom = (callId) => {\n    if (socket && connected) {\n      socket.emit('leave-call-room', callId);\n    }\n  };\n\n  const value = {\n    socket,\n    connected,\n    joinCallRoom,\n    leaveCallRoom\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}